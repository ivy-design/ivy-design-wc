@use 'sass:map';
@use 'sass:math';

$types: primary, success, warning, danger, error, info;

$color-white: #ffffff;
$color-black: #000000;

$colors: (
    'white': #ffffff,
    'black': #000000,
    'primary': (
        'base': #409eff
    ),
    'success': (
        'base': #67c23a
    ),
    'warning': (
        'base': #e6a23c
    ),
    'danger': (
        'base': #f56c6c
    ),
    'error': (
        'base': #f56c6c
    ),
    'info': (
        'base': #909399
    )
);

@mixin set-color-mix-level($type, $number, $mode: 'light', $mix-color: $color-white) {
    $colors: map.deep-merge(
        (
            $type: (
                '#{$mode}-#{$number}':
                    mix(
                        $mix-color,
                        map.get($colors, $type, 'base'),
                        math.percentage(math.div($number, 10))
                    )
            )
        ),
        $colors
    ) !global;
}

@each $type in $types {
    @for $i from 1 through 9 {
        @include set-color-mix-level($type, $i, 'light', $color-white);
    }
}

// --el-color-primary-dark-2
@each $type in $types {
    @include set-color-mix-level($type, 2, 'dark', $color-black);
}

@function joinVarName($list) {
    $name: '--ivy';
    @each $item in $list {
        @if $item != '' {
            $name: $name + '-' + $item;
        }
    }
    @return $name;
}

@mixin set-css-var-value($name, $value) {
    #{joinVarName($name)}: #{$value};
}

:root {
    --ivy-font-family: 'Helvetica Neue', Helvetica, 'PingFang SC', 'Hiragino Sans GB',
        'Microsoft YaHei', '微软雅黑', Arial, sans-serif;
    --ivy-color-white: #ffffff;
    --ivy-color-black: #000000;
    @each $type in ($types) {
        $colorTmp: map.get($colors, $type, 'base');
        @include set-css-var-value(('color', $type), $colorTmp);

        @each $i in (1, 2, 3, 4, 5, 6, 7, 8, 9) {
            $colorLight: map.get($colors, $type, 'light-#{$i}');
            @include set-css-var-value(('color', $type, 'light', $i), $colorLight);
        }

        @include set-css-var-value(('color', $type, 'dart-2'), map.get($colors, $type, 'dark-2'));
    }
    --ivy-text-color-primary: #303133;
    --ivy-text-color-regular: #606266;
    --ivy-text-color-secondary: #909399;
    --ivy-text-color-placeholder: #a8abb2;
    --ivy-text-color-disabled: #c0c4cc;

    --ivy-fill-color: #f0f2f5;
    --ivy-fill-color-light: #f5f7fa;
    --ivy-fill-color-lighter: #fafafa;
    --ivy-fill-color-extra-light: #fafcff;

    --ivy-overlay-color: rgba(0, 0, 0, 0.8);
    --ivy-overlay-color-light: rgba(0, 0, 0, 0.7);
    --ivy-overlay-color-lighter: rgba(0, 0, 0, 0.5);
    --ivy-mask-color: rgba(255, 255, 255, 0.9);
    --ivy-mask-color-extra-light: rgba(255, 255, 255, 0.3);

    --ivy-border-color: #dcdfe6;
    --ivy-border-color-light: #e4e7ed;
    --ivy-border-color-lighter: #ebeef5;
    --ivy-border-color-extra-light: #f2f6fc;
    --ivy-shadow: 0px 12px 32px 4px rgba(0, 0, 0, 0.04), 0px 8px 20px rgba(0, 0, 0, 0.08);
    --ivy-box-shadow: 0px 12px 32px 4px rgba(0, 0, 0, 0.04), 0px 8px 20px rgba(0, 0, 0, 0.08);
    --ivy-box-shadow-light: 0px 0px 12px rgba(0, 0, 0, 0.12);
    --ivy-box-shadow-lighter: 0px 0px 6px rgba(0, 0, 0, 0.12);
    --ivy-box-shadow-dark: 0px 16px 48px 16px rgba(0, 0, 0, 0.08), 0px 12px 32px rgba(0, 0, 0, 0.12),
        0px 8px 16px -8px rgba(0, 0, 0, 0.16);
    --ivy-font-size: 14px;
    --ivy-font-size-small: 12px;

    --ivy-timeline-node-size: 12px;
    --ivy-timeline-node-size-large: 14px;

    --ivy-border-radius: 4px;
    --ivy-border-radius-medium: 8px;

    --ivy-all-transition: all 0.3s cubic-bezier(0.645, 0.045, 0.355, 1);
    --ivy-fade-transition: opacity 300ms cubic-bezier(0.23, 1, 0.32, 1);
    --ivy-fade-linear-transition: opacity 200ms linear;
    --ivy-md-fade-transition: transform 300ms cubic-bezier(0.23, 1, 0.32, 1) opacity 300ms
        cubic-bezier(0.23, 1, 0.32, 1);
    --ivy-border-transition: border-color 0.2s cubic-bezier(0.645, 0.045, 0.355, 1);
    --ivy-color-transition: color 0.2s cubic-bezier(0.645, 0.045, 0.355, 1);
}

*,
*::before,
*::after {
    box-sizing: border-box;
}
